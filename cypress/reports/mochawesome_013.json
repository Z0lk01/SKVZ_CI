{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-05-14T06:40:22.044Z",
    "end": "2025-05-14T06:40:49.436Z",
    "duration": 27392,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2b8662b8-9621-4f82-9f2d-c45b9d0417d7",
      "title": "",
      "fullFile": "cypress\\e2e\\Corrections test.cy.js",
      "file": "cypress\\e2e\\Corrections test.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9bb31e96-958d-4c7a-b9fb-6c64cb2ccaee",
          "title": "Testy TSS monitoringu",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Korekcie a tankovania",
              "fullTitle": "Testy TSS monitoringu Korekcie a tankovania",
              "timedOut": null,
              "duration": 27077,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Define expected values\nconst expectedDate = moment().format('DD.MM.YYYY');\nconst expectedTime = '01:00';\nconst expectedCost = \"50.00 €\";\nconst expectedQuantity = \"50 l\";\n// Navigate to Corrections\ncy.get('#li-toolsmenu > [href=\"javascript:;\"]').scrollIntoView().click();\ncy.get(\"#corrections\").click();\n// Create a correction\ncy.get('#corrections_button_0', {\n  timeout: 10000\n}).should(\"be.visible\").click();\ncy.get('#edit_corrections_time', {\n  timeout: 10000\n}).type(expectedTime);\ncy.get('#edit_corrections_tacho').type(\"112233\");\ncy.get('#edit_corrections_unit_id').click();\ncy.get('#search_grid_units_table_filter > label > input').type(\"FMC150 Test Mza\");\ncy.get('#search_grid_units_table > tbody > .odd > .fixed').should(\"have.text\", \"FMC150 Test Mza\").click();\ncy.get('#modal-success').click();\n// Navigate to Costs\ncy.get('#costsnew', {\n  timeout: 10000\n}).scrollIntoView().click();\ncy.get('#costsnew_button_0', {\n  timeout: 10000\n}).click({\n  force: true\n});\n// Fill in cost details\ncy.get('#edit_drivers_unit', {\n  timeout: 10000\n}).click({\n  force: true\n});\ncy.get('#search_grid_units_table_filter > label > input').type(\"IL 942DE\");\ncy.get('#search_grid_units_table > tbody > .odd > .fixed').should(\"have.text\", \"IL 942DE\").click();\ncy.get('#edit_costsnew_time', {\n  timeout: 10000\n}).type(expectedTime);\ncy.get('#edit_costsnew_quantity').type(\"50\");\ncy.get('#edit_costsnew_quantity_unit-helptext .select2-selection__arrow').click();\ncy.get('#select2-edit_costsnew_quantity_unit-results').children().last().click();\ncy.get('#edit_costsnew_price').type(\"50\");\ncy.get('#edit_costsnew_modules_currencys-helptext .select2-selection__arrow').click();\ncy.get(\"#select2-edit_costsnew_modules_currencys-results\").children().contains(\"€\").click();\ncy.get('#edit_costsnew_note').type(\"test\");\n// Intercept and validate API call\ncy.intercept('POST', 'https://www.tssmonitoring.sk/api/v1.3/FuelCardsDatas/create.json?f=FuelCardsDatas_create&callback=jQuery*').as('fueling');\ncy.get('#modal-success').click();\ncy.wait('@fueling').then(({\n  request,\n  response\n}) => {\n  expect(request.body).to.contain({\n    fk_unit_id: \"207834be-7ac5-434a-9f77-b9563fbe47d3\",\n    price_without_vat: \"40.65\",\n    quantity: \"50\",\n    price: \"50\",\n    note: \"test\",\n    fk_currency_id: \"df50e937-69c3-48fa-909a-7da762aeef99\"\n  });\n  expect(response.statusCode).to.eq(200);\n});\n// Verify cost details in the table\ncy.get('#costsnew_table > tbody > .odd > .sorting_1').then($el => {\n  const formattedText = $el.text();\n  const [datePart, timePart] = formattedText.split(' ');\n  expect(datePart).to.equal(expectedDate);\n  expect(timePart).to.equal(expectedTime);\n});\ncy.get('#costsnew_table > tbody > .odd > :nth-child(9)').should(\"have.text\", expectedQuantity);\ncy.get('#costsnew_table > tbody > .odd > :nth-child(11)').should(\"have.text\", expectedCost);\n// Delete the cost\ncy.get('#costsnew_table > tbody > .odd > .dt-center > :nth-child(2)').click();\ncy.get('#modal-cancel').click();\n// Navigate to Service Book\ncy.get('#service-books-v2').click();\ncy.get('#service-books-v2_unit_filter-text').scrollIntoView().should(\"be.visible\").and(\"have.attr\", \"placeholder\", \"Všetky vozidlá...\");\ncy.get('#filter_centers_service_book_v2-component').should(\"be.visible\");\n// Verify service book filters\nconst serviceBookFilters = [{\n  selector: '#filter_service_books_last-checkbox > .form-label',\n  text: \"Filter na dátum podľa posledného servisu\"\n}, {\n  selector: '#filter_service_books_next-checkbox > .form-label',\n  text: \"Filter na dátum podľa najbližšieho servisu\"\n}, {\n  selector: '#service_books-date_from-component > .form-label > b',\n  text: \"Začiatok obdobia\"\n}, {\n  selector: '#service_books-date_to-component > .form-label > b',\n  text: \"Koniec obdobia\"\n}];\nserviceBookFilters.forEach(filter => {\n  cy.get(filter.selector).should(\"have.text\", filter.text);\n});\n// Add a new service book entry\ncy.get('#service-books-v2_button_0').click();\ncy.get('#edit_service_books_unit').click();\ncy.get('#search_grid_units_table_filter > label > input').type(\"IL 942DE\");\ncy.get('#search_grid_units_table > tbody > .odd > .fixed').click();\ncy.get('#edit_service_books_time').type(expectedTime);\ncy.get('#service_books-settings-tab-2_link').click();\ncy.get(\"#select2-edit_service_books_modules_products-container\").type(\"brzdy\");\ncy.get(\"#select2-edit_service_books_modules_products-results\").click();\ncy.get('#modal-success').click();\n// Verify service book entry\ncy.get('#service-books-v2_table > tbody > :nth-child(1) > :nth-child(3)').should(\"have.text\", \"IL 942DE\");\ncy.get('#service-books-v2_table > tbody > :nth-child(1) > :nth-child(4)').should(\"have.text\", \"Opel Insignia\");\ncy.get('#service-books-v2_table > tbody > :nth-child(1) > :nth-child(5)').then($el => {\n  const formattedText = $el.text();\n  const [datePart, timePart] = formattedText.split(' ');\n  expect(datePart).to.equal(expectedDate);\n  expect(timePart).to.equal(expectedTime);\n});",
              "err": {
                "message": "AssertionError: expected '13.05.2025' to equal '14.05.2025'",
                "estack": "AssertionError: expected '13.05.2025' to equal '14.05.2025'\n    at Context.eval (webpack:///./cypress/e2e/Corrections test.cy.js:88:32)",
                "diff": "- '13.05.2025'\n+ '14.05.2025'\n"
              },
              "uuid": "dd01f1ca-04a0-4612-8456-253e0e54cd55",
              "parentUUID": "9bb31e96-958d-4c7a-b9fb-6c64cb2ccaee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dd01f1ca-04a0-4612-8456-253e0e54cd55"
          ],
          "pending": [],
          "skipped": [],
          "duration": 27077,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true,
        "embeddedScreenshots": true,
        "inlineAssets": true
      },
      "version": "6.2.0"
    }
  }
}